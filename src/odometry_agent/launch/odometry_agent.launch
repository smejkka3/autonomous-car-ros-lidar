<!-- In this file you can see configurations and transforms of sensors-->
<launch>
  <!-- ////////////// -->
  <!-- CONFIGURATIONS -->
  <!-- ////////////// -->

  <!-- True if running simulation, not the real car -->
  <arg name="is_simulation" default="false" />

  <!-- Which odometry inputs will you use toggle true if you will use  -->
  <!-- These flags determines which sensor drivesr to start  -->
  <arg name="wheel_odometry" default="true"  />
  <arg name="imu_odometry" default="false"  />
  <arg name="laser_scanner_odometry" default="true"  />

  <!-- Note that all odometry sources will be fused as long as they are published  -->

  <!-- ///////////////////// -->
  <!-- END OF CONFIGURATIONS -->
  <!-- ///////////////////// -->

  <!-- Starting Nodes -->
  <include file="$(find odometry_agent)/launch/ekf_template.launch"/>

  <group if="$(arg wheel_odometry)">
    <group unless="$(arg is_simulation)">
      <include file="$(find vesc_ackermann)/launch/vesc_to_odom_node.launch"/>
    </group>
  </group>

  <group if="$(arg imu_odometry)">
    <group unless="$(arg is_simulation)">
      <include file="$(find bear_car_launch)/launch/rs_imu.launch"/>
    </group>
  </group>

  <group if="$(arg laser_scanner_odometry)">
    <group unless="$(arg is_simulation)">
      <include file="$(find bear_car_launch)/launch/rplidar_a3.launch"/>
    </group>
    <include file="$(find odometry_agent)/launch/karto_configuration.launch">
        <arg name="scan_topic_name" value="scan"/>
    </include>
  </group>
  <!-- Nodes Started -->

  <!-- Publish Transforms -->
  <include file="$(find odometry_agent)/launch/four_wheel_transforms.launch"/>
  
  <group unless="$(arg is_simulation)">
    <node pkg="rostopic" name="servo_init" type="rostopic" args=" pub /commands/servo/position std_msgs/Float64 'data: 0.45' -1 " />
  </group>

  <!-- Transforms Published -->
</launch>
